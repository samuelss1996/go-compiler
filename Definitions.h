#include <stdio.h>

// Go language keywords
#define KEYWORD_BREAK 300
#define KEYWORD_DEFAULT 301
#define KEYWORD_FUNC 302
#define KEYWORD_INTERFACE 303
#define KEYWORD_SELECT 304
#define KEYWORD_CASE 305
#define KEYWORD_DEFER 306
#define KEYWORD_GO 307
#define KEYWORD_MAP 308
#define KEYWORD_STRUCT 309
#define KEYWORD_CHAN 310
#define KEYWORD_ELSE 311
#define KEYWORD_GOTO 312
#define KEYWORD_PACKAGE 313
#define KEYWORD_SWITCH 314
#define KEYWORD_CONST 315
#define KEYWORD_FALLTHROUGH 316
#define KEYWORD_IF 317
#define KEYWORD_RANGE 318
#define KEYWORD_TYPE 319
#define KEYWORD_CONTINUE 320
#define KEYWORD_FOR 321
#define KEYWORD_IMPORT 322
#define KEYWORD_RETURN 323
#define KEYWORD_VAR 324

// Go language operators and punctuation
#define PUNCTUATION_ADD 400 // +
#define PUNCTUATION_BITWISE_AND 401 // &
#define PUNCTUATION_ADD_EQUALS 402 // +=
#define PUNCTUATION_AND_EQUALS 403 // &=
#define PUNCTUATION_AND 404 // &&
#define PUNCTUATION_IS_EQUAL 405 // ==
#define PUNCTUATION_NOT_EQUALS 406 // !=
#define PUNCTUATION_LEFT_PARENTHESES 407 // (
#define PUNCTUATION_RIGHT_PARENTHESES 408 // )
#define PUNCTUATION_MINUS 409 // -
#define PUNCTUATION_BITWISE_OR 410 // |
#define PUNCTUATION_MINUS_EQUALS 411 // -=
#define PUNCTUATION_OR_EQUALS 412 // |=
#define PUNCTUATION_OR 413 // ||
#define PUNCTUATION_LOWER 414 // <
#define PUNCTUATION_LOWER_EQUALS 415 // <=
#define PUNCTUATION_LEFT_BRACKET 416 // [
#define PUNCTUATION_RIGHT_BRACKET 417 // ]
#define PUNCTUATION_START 418 // *
#define PUNCTUATION_BITWISE_XOR 419 // ^
#define PUNCTUATION_STAR_EQUALS 420 // *=
#define PUNCTUATION_XOR_EQUALS 421 // ^=
#define PUNCTUATION_RECEIVE 422 // <-
#define PUNCTUATION_GREATER 423 // >
#define PUNCTUATION_GREATER_EQUALS 424 // >=
#define PUNCTUATION_LEFT_BRACE 425 // {
#define PUNCTUATION_RIGHT_BRACE 426 // }
#define PUNCTUATION_SLASH 427 // /
#define PUNCTUATION_LEFT_SHIFT 428 // <<
#define PUNCTUATION_SLASH_EQUALS 429 // /=
#define PUNCTUATION_LEFT_SHIFT_EQUALS 430 // <<=
#define PUNCTUATION_INCREMENT 431 // ++
#define PUNCTUATION_ASSIGN 432 // =
#define PUNCTUATION_SPECIAL_ASSIGN 433 // :=
#define PUNCTUATION_COMMA 434 // ,
#define PUNCTUATION_SEMICOLON 435 // ;
#define PUNCTUATION_MODULUS 436 // %
#define PUNCTUATION_RIGHT_SHIFT 437 // >>
#define PUNCTUATION_MODULUS_EQUALS 438 // %=
#define PUNCTUATION_RIGHT_SHIFT_EQUALS 439 // >>=
#define PUNCTUATION_DECREMENT 440 // --
#define PUNCTUATION_NOT 441 // !
#define PUNCTUATION_ELLIPSIS 442 // ...
#define PUNCTUATION_DOT 443 // .
#define PUNCTUATION_COLON 444 // :
#define PUNCTUATION_AND_XOR 445 // &^
#define PUNCTUATION_AND_XOR_EQUALS 446 // &^=

// Go language tokens
#define TOKEN_IDENTIFIER 500
#define TOKEN_INTEGER_LITERAL 503
#define TOKEN_FLOATING_POINT_LITERAL 504
#define TOKEN_IMAGINARY_LITERAL 505
#define TOKEN_RUNE_LITERAL 506
#define TOKEN_STRING_LITERAL 507
#define TOKEN_COMMENT 508
#define TOKEN_BLANK 509

// Go language data types
#define DATA_TYPE_UINT8 600
#define DATA_TYPE_UINT16 601
#define DATA_TYPE_UINT32 602
#define DATA_TYPE_UINT64 603
#define DATA_TYPE_INT8 604
#define DATA_TYPE_INT16 605
#define DATA_TYPE_INT32 606
#define DATA_TYPE_INT64 607
#define DATA_TYPE_FLOAT32 608
#define DATA_TYPE_FLOAT64 609
#define DATA_TYPE_COMPLEX64 610
#define DATA_TYPE_COMPLEX128 611
#define DATA_TYPE_BYTE 612
#define DATA_TYPE_RUNE 613

#define DATA_TYPE_UINT 602
#define DATA_TYPE_INT 606
#define DATA_TYPE_UINTPTR 603

#define DATA_TYPE_STRING 614
#define DATA_TYPE_STRUCT 615

// Go language constants
#define CONSTANT_BOOLEAN_TRUE 700
#define CONSTANT_BOOLEAN_FALSE 701

// Other constants
#define BLOCK_SIZE_BYTES 48
#define ERROR_CODE (-100)
#define TOKEN_NOT_FOUND (-101)
#define MAXIMUM_OPERATOR_LENGTH 3

#define OPERATORS_HASH_TABLE_CAPACITY 50
#define SYMBOLS_HASH_TABLE_CAPACITY 500

#define EXIT_CODE_SUCCESS 0
#define EXIT_CODE_WRONG_ARGUMENTS (-1000)
#define EXIT_CODE_UNABLE_TO_OPEN_FILE (-1001)
#define EXIT_CODE_UNABLE_TO_OPEN_OPERATORS_DB (-1002)
#define EXIT_CODE_UNABLE_TO_OPEN_KEYWORDS_DB (-1003)

#define OPERATORS_DB_FILE_PATH "db/operators.db"
#define KEYWORDS_DB_FILE_PATH "db/keywords.db"

#define ANSI_COLOR_ERROR "\x1b[31m"
#define ANSI_COLOR_RESET "\x1b[0m"

// Custom types
typedef int SymbolsTableValue;